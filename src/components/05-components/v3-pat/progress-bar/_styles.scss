@mixin gradientColor($initialColor: $regular-zeta, $endColor: $regular-alpha) {
	background-image: linear-gradient(270deg, $initialColor 0%, $endColor 100%);
}

.ProgressBarWrap {
	.ProgressBar {
		width: 100%;

		.ProgressBar_structure {
			background-color: $regular-white;
			border: 1px solid $regular-alpha;
			border-radius: 2px;
			overflow: hidden;
			position: relative;
			width: 100%;

			.ProgressBar__animation {
				height: 9px;
			}

			&.Success {
				.ProgressBar__animation {
					background-color: $regular-alpha;
				}
			}

			&.Error {
				.ProgressBar__animation {
					background-color: $regular-red;
				}
			}

			&.Empty {
				.ProgressBar__animation {
					background-color: $regular-white;
				}
			}

			.Active {
				position: relative;

				&::after {
					animation: animate-shine 2s ease-out infinite;
					background: $regular-white;
					bottom: 0;
					content: '';
					left: 0;
					opacity: 0;
					position: absolute;
					right: 0;
					top: 0;
				}
			}
		}

		/*Sucess Color*/

		.Success {
			.Active {
				@include gradientColor;

				&::after {
					background: $regular-zeta;
				}
			}
		}

		/*Error Color*/
		.Error {
			border: 1px solid $regular-red;

			.Active {
				@include gradientColor($regular-red, $dark-red);

				&::after {
					background: $light-red;
				}
			}

			.ProgressBar_structure {
				&.Error {
					.ProgressBar__animation {
						background-color: $regular-red;
					}
				}
			}
		}

		&.DashedBar div {
			background-color: transparent;
			border: none;
			border-color: $mid-light-grey;
			border-radius: 0;
			border-top: dashed;
			border-width: 2px;
			box-shadow: none;
			height: 2px;
			margin-top: 4px;
		}
	}

	.ProgressBarTooltip {
		&[data-tooltip] {
			cursor: auto;
			font-weight: normal;
			position: relative;
			z-index: 2;

			&:before {
				background-color: $regular-beta;
				-webkit-border-radius: 4px;
				border-radius: 4px;
				bottom: 150%;
				box-shadow: none;
				color: $regular-white;
				content: attr(data-tooltip);
				font-size: $font-size-normal;
				margin-bottom: 14px;
				padding: 7px;
				position: absolute;
				text-align: center;
				white-space: nowrap;
			}

			&:after {
				border-left: 5px solid transparent;
				border-right: 5px solid transparent;
				border-top: 5px solid $regular-beta;
				bottom: 150%;
				content: ' ';
				font-size: 0;
				left: 100%;
				line-height: 0;
				margin-bottom: 9px;
				margin-left: -5px;
				position: absolute;
				width: 0;
			}

			&[tooltip-visibility='False'] {
				&:after,
				&:before {
					display: none;
				}
			}

			&[data-position='RIGHT'] {
				&:after {
					border-right: 0px solid transparent;
					left: 100%;
				}
				&:before {
					border-radius: 4px 4px 0px 4px;
					right: 0%;
				}
			}
			&[data-position='CENTER'] {
				&:before {
					left: 100%;
					margin-left: -22px;
				}
			}
			&[data-position='LEFT'] {
				&:after {
					border-left: 0px solid transparent;
					left: 100%;
					margin-left: 0px;
				}
				&:before {
					border-radius: 4px 4px 4px 0px;
					left: 100%;
					margin-left: 0px;
				}
			}
			&[DataTooltipClassBackground='BLACK'] {
				&::before,
				&::after {
					font-size: $font-size-small;
				}
				&::before {
					background-color: $dark-grey;
				}
				&::after {
					border-top: 5px solid $dark-grey;
				}
			}
		}
	}
}

.FA,
.AR {
	.ProgressBarWrap {
		.ProgressBar {
			.Success {
				.Active {
					@include gradientColor($regular-alpha, $regular-zeta);
				}
			}
			.Error {
				.Active {
					@include gradientColor($dark-red, $regular-red);
				}
			}
		}

		.ProgressBarTooltip {
			&[data-tooltip] {
				&:after {
					left: 0%;
					margin-right: -5px;
					right: 100%;
				}
				&[data-position='RIGHT'],
				&[data-position='LEFT'] {
					&:after {
						left: 0%;
						margin-right: 0px;
						right: 100%;
					}
				}

				&[data-position='RIGHT'] {
					&:before {
						border-radius: 4px 4px 4px 0px;
						left: 0;
						right: inherit;
					}

					&:after {
						left: 0%;
						margin-right: -5px;
						right: 100%;
						transform: scale(-1, 1);
					}
				}

				&[data-position='CENTER'] {
					&:before {
						left: unset;
						margin-right: -21px;
						right: 100%;
					}
				}

				&[data-position='LEFT'] {
					&:before {
						border-radius: 4px 4px 0px 4px;
						left: inherit;
						margin-left: 0px;
					}

					&:after {
						border-left: 0px solid transparent;
						left: 100%;
						margin-left: 0px;
						transform: scale(-1, 1);
					}
				}
			}
		}
	}
}

@keyframes animate-shine {
	0% {
		opacity: 0;
		width: 0;
	}
	50% {
		opacity: 0.5;
	}
	100% {
		opacity: 0;
		width: 95%;
	}
}
