@mixin badges($bgColor: $regular-white, $textColor: $regular-blue, $notInverted: true, $borderRadius: 2px) {
	@if ($notInverted) {
		border: 1px solid $bgColor;
	} @else {
		border: 1px solid $textColor;
	}

	background-color: $bgColor;
	border-radius: $borderRadius;
	color: $textColor;
}

@mixin prescriptionBadges($color: transparent) {
	background-color: transparent;
	border-color: $color;
	border-radius: $prescriptionRadius;

	&.IsSelected {
		@include badges($color, $regular-white, $borderRadius: $prescriptionRadius);
	}
}

$prescriptionRadius: 18px;

.DesignSystem,
.LayoutBlank,
.LayoutBase,
.LayoutPopup {
	.StatusBadges {
		@include badges;

		font-family: $font-family-latin-bold;
		font-size: 0.857rem;
		line-height: 12px;
		min-height: 20px;
		padding: 3px 10px;
		vertical-align: middle;

		&.BadgeYellow {
			@include badges($regular-beige, $dark-beige);
		}

		&.BadgeRed {
			@include badges($light-red, $regular-red);
		}

		&.BadgeGreen {
			@include badges($light-green, $regular-green);
		}

		&.BadgeGrey {
			@include badges($light-grey, $regular-grey);
		}

		&.BadgeBlue {
			@include badges($dark-blue, $regular-white);
		}

		&.BadgeWhite {
			@include badges($regular-white, $light-green);
		}

		&.IconTextRed {
			color: $regular-red;
		}

		&.IconTextBlack {
			color: $dark-grey;
		}

		&.InvertBackground {
			&.BadgeRed {
				@include badges($textColor: $regular-red, $notInverted: false);
			}

			&.BadgeGreen {
				@include badges($textColor: $regular-green, $notInverted: false);
			}

			&.BadgeYellow {
				@include badges($textColor: $regular-yellow, $notInverted: false);
			}

			&.BadgeGrey {
				@include badges($textColor: $light-grey, $notInverted: false);
			}

			&.BadgeBlue {
				@include badges($textColor: $dark-blue, $notInverted: false);
			}

			&.BadgeSapphireBlue2 {
				@include badges($textColor: $regular-blue, $notInverted: false);
			}

			&.IconTextRed {
				color: $regular-red;
			}

			&.IconTextBlack {
				color: $dark-grey;
			}
		}

		.tablet .StatusBadges .Badges_Icon + div {
			white-space: nowrap;
		}
	}

	.BadgeClassification {
		border-radius: 4px;
		color: $regular-white;
		display: inline-block;
		font-family: $font-family-latin-bold;
		font-size: $font-size-small;
		padding: 1px 4px;
		white-space: nowrap;

		.IconBadgeClassification {
			margin-right: $sapphire-sizes--xsmall;
		}
	}

	.NumberCircle {
		align-items: center;
		border: 1px solid $mid-dark-grey;
		border-radius: 50%;
		color: $mid-dark-grey;
		display: inline-flex;
		font-size: $font-size-heading3;
		height: 25px;
		justify-content: center;
		width: 25px;
	}

	.StatusTag {
		border-radius: 4px 0 4px 4px;
		color: $regular-white;
		font-family: $font-family-latin-bold;
		font-size: $font-size-small;
		line-height: 15px;
		padding: 2px 8px;
		text-align: center;
		text-transform: uppercase;
	}

	.PrescriptionBadges {
		background-color: transparent;
		border: 2px solid transparent;
		color: $mid-dark-grey;
		font-family: $font-family-latin-bold;
		font-size: $font-size-normal;
		height: 34px;
		line-height: 30px;
		min-width: 157px;
		padding: 0 14px;
		position: relative;
		vertical-align: middle;

		> div:nth-child(1) {
			width: auto;
		}

		.QuantityLabel {
			margin-left: 6px;
		}

		.BadgeArrow {
			font-size: $font-size-small;
			line-height: 34px;
			position: absolute;
			right: 14px;
		}

		&.DarkRed {
			@include prescriptionBadges($dark-red);
		}

		&.Red {
			@include prescriptionBadges($regular-red);
		}

		&.Orange {
			@include prescriptionBadges($regular-orange);
		}

		&.Yellow {
			@include prescriptionBadges($regular-yellow);
		}

		&.Blue {
			@include prescriptionBadges($dark-blue);
		}

		&.DarkGrey {
			@include prescriptionBadges($dark-grey);
		}

		&.LightGrey {
			@include prescriptionBadges($light-grey);
		}

		&.Green {
			@include prescriptionBadges($regular-green);
		}
	}

	.BadgeArrow.IsSelected {
		color: $regular-white;
	}

	.BadgeArrow.IsSmallBadge.IsSelected {
		display: none;
	}

	/* SmallBadge */

	.IsSmallBadge {
		min-width: auto;
	}

	.IsSmallBadgeArrow {
		display: none;
	}

	.FA,
	.AR {
		.IconBadgeClassification {
			margin-left: $sapphire-sizes--xsmall;
			margin-right: auto;
		}

		.PrescriptionBadges {
			padding-left: 0;
			padding-right: 22px;

			&.IsSmallBadge > div {
				width: auto;
			}

			.BadgeArrow {
				left: 14px;
			}

			.QuantityLabel {
				margin-left: 0;
				margin-right: 6px;
			}
		}

		.IsSmallBadge {
			padding: 0 12px;
		}
	}
}

.BadgeCustom {
	border: 1px solid transparent;
	border-radius: $border-radius-default;
	display: inline-flex;
	font-family: $font-family-latin-bold;
	font-size: $font-size-small;
	gap: $sapphire-sizes--xsmall;
	line-height: 12px;
	max-height: 20px;
	padding: 2px $border-radius-default;

	&--autoHeight {
		max-height: unset;
	}

	&--hasNotification {
		position: relative;
	}

	&__Notification {
		position: absolute;
		right: 0;
		top: 0;

		&::before {
			background-color: $regular-beta;
			border-radius: 1px;
			bottom: 1px;
			color: $regular-white;
			content: attr(ui-value);
			font-size: 0.7em;
			padding: 0 6px;
			position: absolute;
			right: 0;
			text-align: center;
			white-space: nowrap;
		}

		&::after {
			border-left: 5px solid transparent;
			border-right: 2px solid transparent;
			border-top: 5px solid $regular-beta;
			content: ' ';
			line-height: 0;
			position: absolute;
			right: 7px;
			top: -1px;
			width: 0;
		}
	}

	&__Icon {
		height: 12px;
	}

	.AR & {
		&__Icon {
			margin-left: $sapphire-sizes--xsmall;
			margin-right: 0;
		}

		&__Notification {
			left: 0;
		}
	}
}

.BadgeFilter {
	@include flex-center-total(inline-flex);

	background-color: $regular-white;
	border: 1px solid $light-grey;
	border-radius: $border-radius-default;
	cursor: pointer;
	height: 36px;
	padding: 0 $sapphire-sizes--xsmall;

	&.Selected {
		border-color: $regular-alpha;
		border-width: 2px;
	}

	.HasBadgeSelected & {
		&:not(.Selected) {
			opacity: 0.7;
		}
	}

	&:hover {
		background-color: $regular-eta;
		border-color: $regular-alpha;
	}

	.BadgeClassification {
		background-color: transparent !important;
		font-size: $font-size-normal;

		> span {
			color: $dark-grey !important;
		}
	}
}
